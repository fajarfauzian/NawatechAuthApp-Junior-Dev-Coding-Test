@page
@model NawatechAuthApp.Pages.Products.IndexModel
@{
    ViewData["Title"] = "Products";
}

<div class="container py-3">
    <div class="d-flex justify-content-between align-items-center mb-3">
        <h2 class="fw-semibold text-black mb-0">@ViewData["Title"]</h2>
       <div class="col-md-4 text-end">
            <a asp-page="Create" class="btn btn-primary">
                <i class="bi bi-plus-circle me-1"></i> Add Product
            </a>
        </div>
    </div>

    @if (!string.IsNullOrEmpty(Model.StatusMessage))
    {
        <div class="alert alert-success alert-dismissible fade show" role="alert">
            <i class="bi bi-check-circle-fill me-2"></i>
            @Model.StatusMessage
            <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
        </div>
    }

    <div class="card border-0 shadow-sm mb-3">
        <div class="card-body">
            <div class="row g-3">
                 <div class="col-md-6">
                    <div class="input-group">
                        <span class="input-group-text"><i class="bi bi-search"></i></span>
                        <input type="text" id="searchInput" class="form-control" placeholder="Search products...">
                    </div>
                </div>
                <div class="col-md-3">
                    <div class="input-group">
                        <span class="input-group-text"><i class="bi bi-tag"></i></span>
                        <select id="categoryFilter" class="form-select">
                            <option value="">All Categories</option>
                            @if (Model.Categories != null)
                            {
                                @foreach (var category in Model.Categories)
                                {
                                    <option value="@category.Name">@category.Name</option>
                                }
                            }
                        </select>
                    </div>
                </div>
                <div class="col-md-3">
                    <div class="input-group">
                        <span class="input-group-text"><i class="bi bi-box"></i></span>
                        <select id="stockFilter" class="form-select">
                            <option value="">All Stock Status</option>
                            <option value="out">Out of Stock</option>
                            <option value="in">In Stock</option>
                        </select>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <div class="card border-0 shadow-sm">
        <div class="card-body p-0">
            <div class="table-responsive">
                <table class="table table-striped table-hover align-middle mb-0">
                    <thead>
                        <tr class="bg-light">
                            <th scope="col" class="px-4 py-3">Name</th>
                            <th scope="col" class="px-4 py-3">Category</th>
                            <th scope="col" class="px-4 py-3">Price</th>
                            <th scope="col" class="px-4 py-3">Stock</th>
                            <th scope="col" class="px-4 py-3 text-end">Actions</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var item in Model.Products)
                        {
                            <tr class="product-row" 
                                data-name="@item.Name.ToLower()" 
                                data-category="@(item.Category?.Name ?? "N/A")"
                                data-stock="@item.Stock">
                                <td class="px-4">
                                    <span class="fw-medium">@item.Name</span>
                                </td>
                                <td class="px-4 text-secondary">
                                    @(item.Category?.Name ?? "N/A")
                                </td>
                                <td class="px-4">
                                    <span class="badge rounded-pill bg-light text-dark border">
                                        Rp @item.Price.ToString("N0")
                                    </span>
                                </td>
                                <td class="px-4">
                                    @{
                                        string stockBadgeColor = "bg-danger text-white";
                                        if (item.Stock > 20)
                                        {
                                            stockBadgeColor = "bg-success text-white";
                                        }
                                        else if (item.Stock > 0)
                                        {
                                            stockBadgeColor = "bg-warning text-dark";
                                        }
                                    }
                                    <span class="badge rounded-pill @stockBadgeColor">
                                        @item.Stock
                                    </span>
                                </td>
                                <td class="px-4">
                                    <div class="d-flex gap-1 justify-content-end">
                                        <a asp-page="./Edit" asp-route-id="@item.Id" 
                                           class="btn btn-light btn-sm" 
                                           data-bs-toggle="tooltip" 
                                           title="Edit">
                                            <i class="bi bi-pencil text-primary"></i>
                                        </a>
                                        <a asp-page="./Details" asp-route-id="@item.Id" 
                                           class="btn btn-light btn-sm"
                                           data-bs-toggle="tooltip" 
                                           title="Details">
                                            <i class="bi bi-info-circle text-info"></i>
                                        </a>
                                        <a asp-page="./Delete" asp-route-id="@item.Id" 
                                           class="btn btn-light btn-sm"
                                           data-bs-toggle="tooltip" 
                                           title="Delete">
                                            <i class="bi bi-trash text-danger"></i>
                                        </a>
                                    </div>
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        // Initialize tooltips
        var tooltipTriggerList = [].slice.call(document.querySelectorAll('[data-bs-toggle="tooltip"]'))
        tooltipTriggerList.map(function (tooltipTriggerEl) {
            return new bootstrap.Tooltip(tooltipTriggerEl, {
                placement: 'top'
            })
        })

        // Filter functionality
        function filterProducts() {
            const categoryValue = document.getElementById('categoryFilter').value.toLowerCase();
            const stockValue = document.getElementById('stockFilter').value;
            const searchValue = document.getElementById('searchInput').value.toLowerCase();

            document.querySelectorAll('.product-row').forEach(row => {
                const name = row.dataset.name;
                const category = row.dataset.category.toLowerCase();
                const stock = parseInt(row.dataset.stock);

                let showRow = true;

                // Category filter
                if (categoryValue && category !== categoryValue) {
                    showRow = false;
                }

                // Stock filter
                if (stockValue === 'out' && stock > 0) {
                    showRow = false;
                } else if (stockValue === 'in' && stock === 0) {
                    showRow = false;
                }

                // Search filter
                if (searchValue && !name.includes(searchValue)) {
                    showRow = false;
                }

                row.style.display = showRow ? '' : 'none';
            });
        }

        // Add event listeners
        document.getElementById('categoryFilter').addEventListener('change', filterProducts);
        document.getElementById('stockFilter').addEventListener('change', filterProducts);
        document.getElementById('searchInput').addEventListener('input', filterProducts);
    </script>
}
