@page
@model NawatechAuthApp.Pages.Products.IndexModel
@{
    ViewData["Title"] = "Products";
}

<div class="container-fluid py-4">
    <!-- Header Section -->
    <div class="d-flex justify-content-between align-items-center mb-4">
        <div>
            <h1 class="h3 mb-1">@ViewData["Title"]</h1>
            <p class="text-muted mb-0">Manage your product inventory</p>
        </div>
        <a asp-page="Create" class="btn btn-primary">
            <i class="bi bi-plus-circle me-2"></i>Add Product
        </a>
    </div>

    <!-- Search and Filter Section -->
    <div class="card shadow-sm border-0 mb-4">
        <div class="card-body py-3">
            <div class="row g-3 align-items-center">
                <div class="col-md-4">
                    <div class="input-group">
                        <span class="input-group-text"><i class="bi bi-search"></i></span>
                        <input type="text" class="form-control" placeholder="Search products..." id="searchInput">
                    </div>
                </div>
                <div class="col-md-3">
                    <select class="form-select" id="categoryFilter">
                        <option value="">All Categories</option>
                        @foreach (var category in Model.Categories)
                        {
                            <option value="@category.Name">@category.Name</option>
                        }
                    </select>
                </div>
                <div class="col-md-2">
                    <select class="form-select" id="stockFilter">
                        <option value="">All Stock</option>
                        <option value="in-stock">In Stock</option>
                        <option value="out-of-stock">Out of Stock</option>
                    </select>
                </div>
                <div class="col-md-3 text-end">
                    <span class="text-muted">Total: <strong>@Model.Products.Count()</strong> products</span>
                </div>
            </div>
        </div>
    </div>

    <!-- Products Table View -->
    <div class="card shadow-sm border-0">
        <div class="card-body p-0">
            @if (Model.Products.Any())
            {
                <div class="table-responsive">
                    <table class="table table-hover align-middle mb-0">
                        <thead class="table-light">
                            <tr>
                                <th scope="col" class="px-4 py-3">Product</th>
                                <th scope="col" class="px-4 py-3">Category</th>
                                <th scope="col" class="px-4 py-3">Price</th>
                                <th scope="col" class="px-4 py-3">Stock</th>
                                <th scope="col" class="px-4 py-3">Status</th>
                                <th scope="col" class="px-4 py-3 text-center">Actions</th>
                            </tr>
                        </thead>
                        <tbody id="productsTable">
                            @foreach (var product in Model.Products)
                            {
                                <tr class="product-row" data-category="@product.Category?.Name" data-stock="@(product.Stock > 0 ? "in-stock" : "out-of-stock")">
                                    <td class="px-4 py-3">
                                        <div class="d-flex align-items-center">
                                            <h6 class="mb-0 fw-semibold">@product.Name</h6>
                                        </div>
                                    </td>
                                    <td class="px-4 py-3">
                                        <span class="badge bg-secondary bg-opacity-10 text-secondary">@(product.Category?.Name ?? "N/A")</span>
                                    </td>
                                    <td class="px-4 py-3">
                                        <span class="fw-semibold text-primary">@product.Price.ToString("C")</span>
                                    </td>
                                    <td class="px-4 py-3">
                                        <span class="badge bg-@(product.Stock > 10 ? "success" : product.Stock > 0 ? "warning" : "danger") bg-opacity-10 text-@(product.Stock > 10 ? "success" : product.Stock > 0 ? "warning" : "danger")">
                                            @product.Stock
                                        </span>
                                    </td>
                                    <td class="px-4 py-3">
                                        <span class="badge bg-@(product.Stock > 0 ? "success" : "danger") bg-opacity-10 text-@(product.Stock > 0 ? "success" : "danger")">
                                            @(product.Stock > 0 ? "In Stock" : "Out of Stock")
                                        </span>
                                    </td>
                                    <td class="px-4 py-3 text-center">
                                        <div class="btn-group" role="group">
                                            <a asp-page="./Details" asp-route-id="@product.Id" class="btn btn-sm btn-outline-info" title="Details">
                                                <i class="bi bi-eye"></i>
                                            </a>
                                            <a asp-page="./Edit" asp-route-id="@product.Id" class="btn btn-sm btn-outline-primary" title="Edit">
                                                <i class="bi bi-pencil"></i>
                                            </a>
                                            <button type="button" class="btn btn-sm btn-outline-danger" title="Delete" 
                                                    onclick="showDeleteModal('@product.Id', '@product.Name')">
                                                <i class="bi bi-trash"></i>
                                            </button>
                                        </div>
                                    </td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
            }
            else
            {
                <div class="text-center py-5">
                    <i class="bi bi-box-seam text-muted" style="font-size: 3rem;"></i>
                    <h5 class="mt-3 text-muted">No products found</h5>
                    <p class="text-muted">Get started by adding your first product.</p>
                    <a asp-page="Create" class="btn btn-primary">
                        <i class="bi bi-plus-circle me-2"></i>Add Product
                    </a>
                </div>
            }
        </div>
    </div>
</div>

<!-- Delete Confirmation Modal -->
<div class="modal fade" id="deleteModal" tabindex="-1">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header border-0">
                <h5 class="modal-title">
                    <i class="bi bi-exclamation-triangle text-warning me-2"></i>
                    Confirm Delete
                </h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
            </div>
            <div class="modal-body">
                <p>Are you sure you want to delete the product <strong id="productName"></strong>?</p>
                <div class="alert alert-warning">
                    <i class="bi bi-exclamation-triangle me-2"></i>
                    This action cannot be undone.
                </div>
            </div>
            <div class="modal-footer border-0">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                <form id="deleteForm" method="post" style="display: inline;">
                    <input name="__RequestVerificationToken" type="hidden" value="@Html.AntiForgeryToken()" />
                    <input type="hidden" id="deleteId" name="id" />
                    <button type="submit" class="btn btn-danger" id="confirmDelete">
                        <span class="spinner-border spinner-border-sm me-2" style="display: none;"></span>
                        <i class="bi bi-trash me-2"></i>Delete
                    </button>
                </form>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        function showDeleteModal(id, name) {
            document.getElementById('deleteId').value = id;
            document.getElementById('productName').textContent = name;
            new bootstrap.Modal(document.getElementById('deleteModal')).show();
        }

        document.getElementById('deleteForm').addEventListener('submit', function() {
            const button = document.getElementById('confirmDelete');
            const spinner = button.querySelector('.spinner-border');
            button.disabled = true;
            spinner.style.display = 'inline-block';
        });

        // Search and filter functionality
        function filterProducts() {
            const searchTerm = document.getElementById('searchInput').value.toLowerCase();
            const categoryFilter = document.getElementById('categoryFilter').value;
            const stockFilter = document.getElementById('stockFilter').value;
            
            // Filter table view
            const tableRows = document.querySelectorAll('.product-row');
            tableRows.forEach(row => {
                const text = row.textContent.toLowerCase();
                const category = row.dataset.category || '';
                const stock = row.dataset.stock;
                
                const matchesSearch = text.includes(searchTerm);
                const matchesCategory = !categoryFilter || category === categoryFilter;
                const matchesStock = !stockFilter || stock === stockFilter;
                
                row.style.display = (matchesSearch && matchesCategory && matchesStock) ? '' : 'none';
            });
        }

        document.getElementById('searchInput').addEventListener('input', filterProducts);
        document.getElementById('categoryFilter').addEventListener('change', filterProducts);
        document.getElementById('stockFilter').addEventListener('change', filterProducts);
    </script>
}
